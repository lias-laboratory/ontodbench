CREATE OR REPLACE FUNCTION HSCHEMA() RETURNS INTEGER AS $$
	DECLARE
	RESULT1 CURSOR FOR SELECT DISTINCT TYPE FROM TYPES ; 
	RESULT2 CURSOR (VAR TEXT) IS SELECT CHAMP FROM PROPERTYTAB AS P WHERE P.TYPE=VAR; 
	NUM INTEGER;
	NUM1 INTEGER;
	CUR_ID VARCHAR(20);
	CUR_PID VARCHAR(20);
	CUR_TYPE TEXT;
	CUR_PROPERTY TEXT;
	CUR_CLE VARCHAR(20);
	NUL VARCHAR(1);
	
	BEGIN 
		DROP TABLE IF EXISTS idclass CASCADE; 
		CREATE TABLE idclass (id VARCHAR(20),type TEXT, CONSTRAINT hcle PRIMARY KEY(id)); 
		CREATE INDEX i_idclass ON idclass(type);
		DROP TABLE IF EXISTS idpredicat CASCADE; 
		CREATE TABLE idpredicat (id VARCHAR(20),id_class VARCHAR(20),predicat TEXT, CONSTRAINT hcle0 PRIMARY KEY(id)); 
		CREATE INDEX i_idpredicat ON idpredicat(id_class);
		NUM=1;
		NUM1=1;
		NUL='';
		
		OPEN RESULT1;
		FETCH RESULT1 INTO CUR_TYPE;
		
		WHILE (FOUND) LOOP
			CUR_ID= 'class' || CAST(NUM AS TEXT);
			CUR_CLE='hcle'  || CAST(NUM AS TEXT);
			EXECUTE 'INSERT INTO idclass (id,type) VALUES ('||quote_literal(CUR_ID)||','||quote_literal(CUR_TYPE)||')';
			EXECUTE 'DROP TABLE IF EXISTS '||CUR_ID ||' CASCADE';
			EXECUTE 'CREATE TABLE '||CUR_ID||' (subject TEXT , CONSTRAINT '||CUR_CLE||' PRIMARY KEY(subject))';
		
			OPEN RESULT2(CUR_TYPE);
			FETCH RESULT2 INTO CUR_PROPERTY;
			WHILE (FOUND) LOOP
				CUR_PID='predicat' || CAST(NUM1 AS TEXT);
				EXECUTE 'INSERT INTO idpredicat (id,id_class,predicat) VALUES ('||quote_literal(CUR_PID)||','||quote_literal(CUR_ID)||','||quote_literal(CUR_PROPERTY)||')';
				EXECUTE 'ALTER TABLE '||CUR_ID||' ADD COLUMN '||CUR_PID||' TEXT DEFAULT '||quote_literal(NUL);
				NUM1=NUM1+1;
				FETCH RESULT2 INTO CUR_PROPERTY;
			END LOOP;
			CLOSE RESULT2;
		
			NUM=NUM+1;
			FETCH RESULT1 INTO CUR_TYPE;
		END LOOP ;
		CLOSE RESULT1;

		DROP TABLE IF EXISTS left_over CASCADE; 
		CREATE TABLE left_over(subject TEXT,prop TEXT,object TEXT, CONSTRAINT LFOV PRIMARY KEY(subject,prop,object)); 
		CREATE INDEX i_leftover ON left_over(prop);
		
		RETURN 1;
	END; 
$$LANGUAGE PLPGSQL;

CREATE OR REPLACE FUNCTION HUPLOAD() RETURNS INTEGER AS $$  --TEXT DEFAULT 'c:\suivi.txt'
	DECLARE
	RESULT1 CURSOR FOR SELECT subject, object FROM V_PREDICAT WHERE (predicat LIKE '%#type') ORDER BY subject ; 
	RESULT2 CURSOR (VAR TEXT) IS SELECT predicat,object FROM V_SUBJECT WHERE (subject=VAR AND predicat NOT LIKE '%#type');
	RESULT3 CURSOR (VAR1 TEXT) IS SELECT id FROM idclass WHERE (type=VAR1);
	RESULT4 CURSOR (VAR2 TEXT,VAR3 VARCHAR(20)) IS SELECT id FROM idpredicat WHERE (predicat=VAR2  AND id_class=VAR3);
	RESULT5 REFCURSOR;
	RESULT6 REFCURSOR;
	TEMP INT;
	NUM REAL;
	CUR_CLASS TEXT;
	CUR_SUB   TEXT;
	CUR_PROP  TEXT;
	CUR_VAL   TEXT;
	CUR_IDCLASS VARCHAR(20);
	CUR_IDPROP  VARCHAR(20);
	TEST_SUB  TEXT;
	TEST_PROP TEXT;
	SCALE FLOAT8 ;
	TOTAL FLOAT8;
	FICHIER TEXT;
	
	BEGIN 
		SELECT COUNT(*) INTO TOTAL FROM V_PREDICAT WHERE (PREDICAT LIKE '%#type');
		NUM=0;
		
		OPEN RESULT1;
		FETCH RESULT1 INTO CUR_SUB,CUR_CLASS;
		WHILE (FOUND) LOOP
		
			NUM=NUM+1;
			
			OPEN RESULT3(CUR_CLASS);
			FETCH RESULT3 INTO CUR_IDCLASS;
			IF (NOT FOUND) THEN 
				RAISE NOTICE 'PROBLEM OF TYPE';
			END IF;
			CLOSE RESULT3;
			
			OPEN RESULT5 FOR EXECUTE 'SELECT COUNT(*)  FROM '||CUR_IDCLASS||' WHERE (subject='||quote_literal(CUR_SUB)||')';
			FETCH RESULT5 INTO TEMP;
			IF (TEMP=0) THEN
				EXECUTE 'INSERT INTO '||CUR_IDCLASS||' (subject) VALUES ('||quote_literal(CUR_SUB)||')';
			END IF;
			CLOSE RESULT5;
			
			OPEN RESULT2(CUR_SUB);
			FETCH RESULT2 INTO CUR_PROP,CUR_VAL;
			WHILE  (FOUND) LOOP
		
				OPEN RESULT4(CUR_PROP,CUR_IDCLASS);
				FETCH RESULT4 INTO CUR_IDPROP;
				IF (NOT FOUND) THEN 
					RAISE NOTICE 'PROBLEM OF PROPERTY';
				END IF;
				CLOSE RESULT4;
			
				OPEN RESULT5 FOR EXECUTE 'SELECT subject,'|| CUR_IDPROP||' FROM '||CUR_IDCLASS||' WHERE (subject='||quote_literal(CUR_SUB)||')';
				FETCH RESULT5 INTO TEST_SUB,TEST_PROP ;
				IF (FOUND) THEN 
					IF (TEST_PROP='') THEN 
						EXECUTE 'UPDATE '||CUR_IDCLASS||' SET '||CUR_IDPROP||' = '||quote_literal(CUR_VAL)||' WHERE (subject= '||quote_literal(CUR_SUB)||')';
					ELSE
						OPEN RESULT6 FOR EXECUTE 'SELECT COUNT(*)  FROM left_over WHERE(subject='||quote_literal(CUR_SUB)||' AND prop='||quote_literal(CUR_PROP)||' AND object='||quote_literal(CUR_VAL)||')';
						FETCH RESULT6 INTO TEMP;
						IF (TEMP=0) THEN
							EXECUTE 'INSERT INTO left_over (subject,prop,object) VALUES ('||quote_literal(CUR_SUB)||','||quote_literal(CUR_PROP)||','||quote_literal(CUR_VAL)||')';
						END IF;
						CLOSE RESULT6;
					END IF;
				END IF;
				CLOSE RESULT5;
				
				FETCH RESULT2 INTO CUR_PROP,CUR_VAL;
				
			END LOOP;
			CLOSE RESULT2;
			
			SCALE= (NUM/TOTAL)*100;
			EXECUTE 'INSERT INTO evolutionh (evol) VALUES ('||quote_literal(SCALE)||')';
			
			FETCH RESULT1 INTO CUR_SUB,CUR_CLASS;
		END LOOP;
		CLOSE RESULT1;
		RETURN 1;
	END; 
$$LANGUAGE PLPGSQL;