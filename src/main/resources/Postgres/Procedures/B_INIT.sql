CREATE OR REPLACE FUNCTION BSCHEMA() RETURNS INTEGER AS $$
	DECLARE
	RESULT1 CURSOR FOR SELECT DISTINCT PREDICAT FROM V_PREDICAT ; 
	NUM INTEGER;
	CUR_ID VARCHAR(20);
	CUR_IN VARCHAR(20);
	CUR_PRED TEXT;
	CUR_KEY  TEXT;
	
	BEGIN 
		DROP TABLE IF EXISTS idproperty CASCADE; 
		CREATE TABLE idproperty (id	VARCHAR(20),property TEXT, CONSTRAINT bcle PRIMARY KEY(id)); 
		CREATE INDEX i_idproperty ON idproperty(property);
		NUM=1;
		OPEN RESULT1;
		FETCH RESULT1 INTO CUR_PRED;
		WHILE (FOUND) LOOP
			CUR_ID= 'property' || CAST(NUM AS TEXT);
			CUR_IN= 'iproperty' || CAST(NUM AS TEXT);
			CUR_KEY= 'bkey' || CAST(NUM AS TEXT);
			EXECUTE 'INSERT INTO  idproperty (id,property) VALUES ( '|| quote_literal(CUR_ID)||','||quote_literal(CUR_PRED)||')';
			EXECUTE 'DROP TABLE IF EXISTS '||CUR_ID||' CASCADE';
			EXECUTE 'CREATE TABLE '||CUR_ID||' (subject TEXT, pr_value TEXT, CONSTRAINT '|| CUR_KEY ||' PRIMARY KEY(subject,pr_value))';	
			EXECUTE 'CREATE INDEX '|| CUR_IN ||' ON '|| CUR_ID ||'(subject)';
			NUM=NUM+1;
			FETCH RESULT1 INTO CUR_PRED;
		END LOOP ;
		CLOSE RESULT1 ;
		RETURN 1;
	END; 
$$LANGUAGE PLPGSQL;

CREATE OR REPLACE FUNCTION BUPLOAD() RETURNS INTEGER AS $$ 
	DECLARE
	RESULT1 CURSOR FOR SELECT subject,predicat,OBJECT FROM triplets ; 
	RESULT2 CURSOR (VAR TEXT) IS SELECT id FROM idproperty AS P WHERE P.property=VAR;
	NUM REAL;
	CUR_SUB TEXT;
	CUR_PRED TEXT;
	CUR_OBJ TEXT;
	CUR_ID VARCHAR(20);
	SCALE FLOAT8;
	TOTAL FLOAT8;
	FICHIER TEXT;
	
	
	BEGIN 
		SELECT COUNT(*) INTO TOTAL FROM triplets ;
		NUM=0;
		
		OPEN RESULT1;
		FETCH RESULT1 INTO CUR_SUB,CUR_PRED,CUR_OBJ;
		WHILE (FOUND) LOOP
		
		NUM=NUM+1;
		
		OPEN RESULT2(CUR_PRED);
		FETCH RESULT2 INTO CUR_ID;
		IF (FOUND) THEN 
			EXECUTE 'INSERT INTO '||CUR_ID|| '(subject,pr_value) VALUES (' ||quote_literal(CUR_SUB)||','||quote_literal(CUR_OBJ)||')';
		END IF;
		CLOSE RESULT2;
		
		SCALE= (NUM/TOTAL)*100;
		EXECUTE 'INSERT INTO evolutionb (evol) VALUES ('||quote_literal(SCALE)||')';
		
		FETCH RESULT1 INTO CUR_SUB,CUR_PRED,CUR_OBJ;
		END LOOP;
		RETURN 1;
	END; 
$$LANGUAGE PLPGSQL;